pipeline {
    node('ec2') {

        environment {
            git_url = "git@github.com:infra-ops/multi-branch.git"
            git_branch = "main"
            sshKey = credentials('github_key') // Replace with your SSH key credentials ID
            BUILD_PATH = "${WORKSPACE}/multi-branch"
            JENKINS_IP = "your_jenkins_ip" // Replace with your Jenkins IP
        }

        stages {
            stage("Tools initialization") {
                script {
                    sh "mvn --version"
                }
            }

            stage('Checkout') {
                script {
                    checkout([$class: 'GitSCM', branches: [[name: "${git_branch}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github_key', url: "git@github.com:infra-ops/multi-branch.git"]]])
                }
            }

            stage('Sonar Security Scan') {
                script {
                    echo "Sonar Scan"
                    // Add SonarQube scanning steps here
                }
            }

            stage('Docker Build and Tag') {
                script {
                    echo "Docker build and tag"
                    // Add Docker build and tagging steps here
                }
            }

            stage('Docker Scan') {
                script {
                    echo "Docker scan"
                    // Add Docker scanning steps here
                }
            }

            stage('Docker Push') {
                script {
                    echo "Docker push"
                    // Add Docker push steps here
                }
            }

            stage("Deploy Image to Dev") {
                script {
                    echo "Deploying to dev"
                    // Add deployment steps here
                }
            }

            stage("Test App in Dev") {
                script {
                    echo "Test me"
                    // Add testing steps here
                }
            }

            stage('Announce') {
                script {
                    if (currentBuild.resultIsBetterOrEqualTo('SUCCESS')) {
                        echo "Build successful!"
                    } else {
                        error "Build failed!"
                    }
                }
            }
        }
    }
}

