docker run -d -p 9000:9000 --name sonarqube sonarqube:latest


export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

export SONAR_HOME=/var/opt/sonar
export SONAR_PATH=$HOME/sonar
export PATH=$PATH:$SONAR_HOME/bin:$SONAR_PATH/bin



#export PATH="$PATH:/opt/var/sonar/bin"


sonar-scanner \
  -Dsonar.projectKey=sample_test_01 \
  -Dsonar.sources=. \
  -Dsonar.host.url=http://127.0.0.1:9000 \
  -Dsonar.token=sqp_c7e87a0f6be4bbe7c40f2bb7cbc88857671d6a0b


/opt/maven/bin/mvn clean install sonar:sonar -Dsonar.token=sqp_c7e87a0f6be4bbe7c40f2bb7cbc88857671d6a0b

/opt/maven/bin/mvn clean package

/opt/maven/bin/mvn clean compile test

/opt/maven/bin/mvn clean install sonar:sonar -Dsonar.token=sqp_c7e87a0f6be4bbe7c40f2bb7cbc88857671d6a0b -Dsonar.java.coveragePlugin=jacoco -Dsonar.verbose=true
git@github.com:nik786/hello-tomcat-project-2.git


/opt/maven/bin/mvn clean install sonar:sonar -Dsonar.token=sqp_c7e87a0f6be4bbe7c40f2bb7cbc88857671d6a0b -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml -Dsonar.java.coveragePlugin=jacoco -Dsonar.verbose=true

docker run -d -p 9000:9000 --name sonarqube sonarqube:latest
docker run -d --name sonar-db --network sonar-network -e POSTGRES_USER=sonar -e POSTGRES_PASSWORD=sonar -e POSTGRES_DB=sonar postgres:9.6

docker run -d --name sonar -p 9000:9000 --network sonar-network -e SONARQUBE_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonar -e SONAR_JDBC_USERNAME=sonar -e SONAR_JDBC_PASSWORD=sonar sonarqube

docker run --rm --link sonarqube \
-e SONAR_HOST_URL="http://sonarqube:9000" \
-e SONAR_LOGIN="d32ede54513ec7b92589139aaaa5781c121a9303" \
-v "${YOUR_REPO}:/usr/src" \
sonarsource/sonar-scanner-cli


docker-compose -f sonar-scanner.yml up



curl -u admin:**** -s --request GET --url  "http://localhost:9000/api/qualitygates/project_status?projectKey=sample_test_01" 


